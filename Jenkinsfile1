pipeline {
    agent any
    
    environment {
        APP_DIR = "${WORKSPACE}/app-web" 
    }
    
    stages {
        stage('Prepare Directory') {
            steps {
                echo "Preparing application directory at ${APP_DIR}..."
                sh "rm -rf ${APP_DIR} && mkdir -p ${APP_DIR}"
            }
        }
        
        stage('Drop Containers') {   
            parallel {
                stage('Drop Apache container') {
                    steps {
                        echo 'Dropping the Apache container...'
                        sh 'docker rm -f app-web-apache || true'
                    }
                }
                stage('Drop Nginx container') {
                    steps {
                        echo 'Dropping the Nginx container...'
                        sh 'docker rm -f app-web-nginx || true'
                    }
                }
            }
        }
        
        stage('Create Containers in Parallel') {
            parallel {
                stage('Create Apache container') {           
                    steps {
                        echo 'Creating the Apache Container...'
                        sh "docker run -dit --name app-web-apache -p 9100:80 -v ${APP_DIR}:/usr/local/apache2/htdocs/ httpd"
                    }
                }
                stage('Create Nginx container') {
                   steps {
                       echo 'Creating the Nginx Container...'
                       sh "docker run -dit --name app-web-nginx -p 9200:80 -v ${APP_DIR}:/usr/share/nginx/html nginx"
                   }
                }       
            }
        }
        
        stage('Copy Web Application') {
            steps {
                echo 'Copying web application...'
                sh "[ -d web ] && cp -r web/* ${APP_DIR} || echo 'No web directory found, skipping copy.'"
            }
        }
    }

    post {              
        success {
            echo 'Deployment to Nginx and Apache succeeded.'
            archiveArtifacts allowEmptyArchive: true, artifacts: 'web/*', followSymlinks: false
            cleanWs()
        }
        failure {
            echo 'An error occurred during deployment.'
        }
    }
}

